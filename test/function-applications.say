(load "builtin.pys")

(lambda (x y) (sum (data x y)))

((lambda [x y]
  (sum [data x y]))
 1 2)

(define song "Autumn Leaves")

song

"format string: name of the song is ~{song}~ and another is ~{(sum (data 1 2))}~."

(define plus
 (lambda [x y] 
  (sum [data x y])))

plus

(plus 1 2)

(define fib
 (lambda (n) 
  (cond ((<= n 2) 1)
   (else
    (+ (fib (- n 1))
       (fib (- n 2)))))))

(fib 2)

(fib 3)

(fib 6)

(apply first (data (data 5566 1 2 3)))

(apply + (data 1 2 3))

(apply 
 (lambda (x y) (data x y))
 (data 55 66))

((lambda (x y z) (+ x (* y z)))
 1 
 (** (data 2 3)))

((lambda (w x y z) (+ w (* x y) z))
 1 
 (** (data 2 3))
 4)

(map max (data 1 2 3) (data 4 5 6))

(map (lambda (x y) (* x y))
     (data 1 2 3) (data 4 5 6))

((lambda
  [x y] 
  (sum [data x y z]))
 1 2)


